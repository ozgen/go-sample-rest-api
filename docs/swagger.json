{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/camera_metadata": {
            "post": {
                "description": "Creates a new camera metadata entry.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "camera"
                ],
                "summary": "Create camera metadata",
                "parameters": [
                    {
                        "description": "Camera Metadata Info",
                        "name": "cameraMetadata",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CameraMetadataPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Camera metadata successfully created.",
                        "schema": {
                            "$ref": "#/definitions/types.CameraMetadataResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters.",
                        "schema": {
                            "$ref": "#/definitions/types.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/types.HTTPError"
                        }
                    }
                }
            }
        },
        "/camera_metadata/{camID}": {
            "get": {
                "description": "Retrieves metadata for a specific camera.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "camera"
                ],
                "summary": "Get camera metadata",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Camera ID",
                        "name": "camID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Camera metadata found.",
                        "schema": {
                            "$ref": "#/definitions/types.CameraMetadataResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid camera ID.",
                        "schema": {
                            "$ref": "#/definitions/types.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Camera metadata not found.",
                        "schema": {
                            "$ref": "#/definitions/types.HTTPError"
                        }
                    }
                }
            }
        },
        "/camera_metadata/{camID}/download_image": {
            "get": {
                "description": "Downloads an image file associated with a camera.",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "camera"
                ],
                "summary": "Download an image from a camera",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Camera ID",
                        "name": "camID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image file downloaded successfully.",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Invalid camera ID.",
                        "schema": {
                            "$ref": "#/definitions/types.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Image not found.",
                        "schema": {
                            "$ref": "#/definitions/types.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Failed to download image.",
                        "schema": {
                            "$ref": "#/definitions/types.HTTPError"
                        }
                    }
                }
            }
        },
        "/camera_metadata/{camID}/init": {
            "patch": {
                "description": "Marks a camera metadata entry as initialized.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "camera"
                ],
                "summary": "Initialize camera metadata",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Camera ID",
                        "name": "camID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Camera metadata initialized successfully."
                    },
                    "400": {
                        "description": "Invalid camera ID.",
                        "schema": {
                            "$ref": "#/definitions/types.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Camera not found.",
                        "schema": {
                            "$ref": "#/definitions/types.HTTPError"
                        }
                    },
                    "409": {
                        "description": "Camera already initialized.",
                        "schema": {
                            "$ref": "#/definitions/types.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/types.HTTPError"
                        }
                    }
                }
            }
        },
        "/camera_metadata/{camID}/upload_image": {
            "post": {
                "description": "Uploads an image file associated with a camera.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "camera"
                ],
                "summary": "Upload an image to a camera",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Camera ID",
                        "name": "camID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Image ID",
                        "name": "imageID",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Base64 encoded image data",
                        "name": "image_as_bytes",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image uploaded successfully.",
                        "schema": {
                            "$ref": "#/definitions/types.ImageUploadedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request parameters.",
                        "schema": {
                            "$ref": "#/definitions/types.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Camera metadata not found.",
                        "schema": {
                            "$ref": "#/definitions/types.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Failed to upload image.",
                        "schema": {
                            "$ref": "#/definitions/types.HTTPError"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login with email and password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login Credentials",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.LoginUserPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "token: JWT Token on successful login.",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request when the payload is invalid.",
                        "schema": {
                            "$ref": "#/definitions/types.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found, invalid email or password.",
                        "schema": {
                            "$ref": "#/definitions/types.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.HTTPError"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Register a new user with name, email, and password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "Register Information",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.RegisterUserPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully registered and no content returned."
                    },
                    "400": {
                        "description": "Bad Request if the payload is invalid or user exists.",
                        "schema": {
                            "$ref": "#/definitions/types.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error if database error occurs.",
                        "schema": {
                            "$ref": "#/definitions/types.HTTPError"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Get detailed information about a user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get a user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of user detail.",
                        "schema": {
                            "$ref": "#/definitions/types.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request if user ID is missing or invalid.",
                        "schema": {
                            "$ref": "#/definitions/types.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found if user does not exist.",
                        "schema": {
                            "$ref": "#/definitions/types.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "types.CameraMetadataPayload": {
            "type": "object",
            "required": [
                "camera_name",
                "firmware_version"
            ],
            "properties": {
                "camera_name": {
                    "type": "string"
                },
                "firmware_version": {
                    "type": "string"
                }
            }
        },
        "types.CameraMetadataResponse": {
            "type": "object",
            "properties": {
                "cam_id": {
                    "type": "string"
                },
                "camera_name": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "firmware_version": {
                    "type": "string"
                }
            }
        },
        "types.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "types.ImageUploadedResponse": {
            "type": "object",
            "properties": {
                "cam_id": {
                    "type": "string"
                },
                "camera_name": {
                    "type": "string"
                },
                "firmware_version": {
                    "type": "string"
                },
                "image_id": {
                    "type": "string"
                }
            }
        },
        "types.LoginUserPayload": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "types.RegisterUserPayload": {
            "type": "object",
            "required": [
                "email",
                "firstName",
                "lastName",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 130,
                    "minLength": 3
                }
            }
        },
        "types.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastName": {
                    "type": "string"
                }
            }
        }
    }
}